/*****************************************************************************
  AUTO-GENERATED CODE:  Graphics Resource Converter version: 4.02.00

  Company:
      Microchip Technology, Inc.
 
  File Name:
     internal_resource.h
 
  Summary:
      This file is generated by the Microchip's Graphics Resource Converter.
  Description:
      This file is generated by the Graphics Resource Converter containing
      resources such as images and fonts that can be used by Microchip's
      Graphics Library, which is part of the MLA.
 *****************************************************************************/

// DOM-IGNORE-BEGIN
/*****************************************************************************
  Software License Agreement

  Copyright(c) 2013 Microchip Technology Inc.  All rights reserved.
  Microchip licenses to you the right to use, modify, copy and distribute
  Software only when embedded on a Microchip microcontroller or digital
  signal controller that is integrated into your product or third party
  product (pursuant to the sublicense terms in the accompanying license
  agreement).
 
  You should refer to the license agreement accompanying this Software
  for additional information regarding your rights and obligations.
 
  SOFTWARE AND DOCUMENTATION ARE PROVIDED “AS IS” WITHOUT WARRANTY OF ANY
  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY
  OF MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR
  PURPOSE. IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR
  OBLIGATED UNDER CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION,
  BREACH OF WARRANTY, OR OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT
  DAMAGES OR EXPENSES INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL,
  INDIRECT, PUNITIVE OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA,
  COST OF PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY
  CLAIMS BY THIRD PARTIES (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF),
  OR OTHER SIMILAR COSTS.
 *****************************************************************************/
// DOM-IGNORE-END

#ifndef INTERNAL_RESOURCE_H_FILE
#define INTERNAL_RESOURCE_H_FILE
/*****************************************************************************
 * SECTION:  Includes
 *****************************************************************************/
#include <gfx/gfx.h>
#include <stdint.h>

/*****************************************************************************
 * SECTION:  Graphics Library Format Check
 *****************************************************************************/
#ifndef GFX_RESOURCE_FORMAT_VERSION
    #if(GRAPHICS_LIBRARY_VERSION != 0x0401)
    #warning "It is suggested to use Graphics Library version 4.01 or later with this version of GRC."
    #endif
#elif(GFX_RESOURCE_FORMAT_VERSION != 0x0101)
#warning "It is suggested to use Graphics Library with the resource format version 1.01 with this version of GRC."
#endif

/*****************************************************************************
 * SECTION:  Graphics Bitmap Padding Check
 *****************************************************************************/
#ifdef GFX_CONFIG_IMAGE_PADDING_DISABLE
#error These bitmap resources have been converted with padding of the horizontal lines, but GFX_CONFIG_IMAGE_PADDING_DISABLE is defined in system_config.h.
#endif


/*****************************************************************************
 * SECTION: Graphics Configuration
 * Overview:    This defines the size of the buffer used by font functions
 *              to retrieve font data from the external memory. The buffer
 *              size can be increased to accommodate large font sizes.
 *              The user must be aware of the expected glyph sizes of the 
 *              characters stored in the font table. 
 *              To modify the size used, declare this macro in the 
 *              system_config.h file with the desired size.
 *
 * #define GFX_EXTERNAL_FONT_RASTER_BUFFER_SIZE     (132)
 *****************************************************************************/

/*****************************************************************************
 * This is an error check for the color depth
 *****************************************************************************/
#if (GFX_CONFIG_COLOR_DEPTH > 16)
#error "Color Depth needs to be 16 to correctly use these resources"
#endif



/*****************************************************************************
 * SECTION:  BITMAPS
 *****************************************************************************/

/*********************************
 * Bitmap Structure
 * Label: flower1bit
 * Description:  85x113 pixels, 1-bits per pixel
 ***********************************/
extern const GFX_RESOURCE_HDR flower1bit;
#define flower1bit_WIDTH     (85)
#define flower1bit_HEIGHT    (113)
#define flower1bit_SIZE      (1253)
/*********************************
 * Bitmap Structure
 * Label: flower4bit
 * Description:  85x113 pixels, 4-bits per pixel
 ***********************************/
extern const GFX_RESOURCE_HDR flower4bit;
#define flower4bit_WIDTH     (85)
#define flower4bit_HEIGHT    (113)
#define flower4bit_SIZE      (4897)
/*********************************
 * Bitmap Structure
 * Label: flower8bit
 * Description:  85x113 pixels, 8-bits per pixel
 ***********************************/
extern const GFX_RESOURCE_HDR flower8bit;
#define flower8bit_WIDTH     (85)
#define flower8bit_HEIGHT    (113)
#define flower8bit_SIZE      (10123)
/*********************************
 * Bitmap Structure
 * Label: flower16bit
 * Description:  85x113 pixels, 16-bits per pixel
 ***********************************/
extern const GFX_RESOURCE_HDR flower16bit;
#define flower16bit_WIDTH     (85)
#define flower16bit_HEIGHT    (113)
#define flower16bit_SIZE      (19216)
/*********************************
 * Bitmap Structure
 * Label: Sun8bit
 * Description:  72x72 pixels, 8-bits per pixel
 ***********************************/
extern const GFX_RESOURCE_HDR Sun8bit;
#define Sun8bit_WIDTH     (72)
#define Sun8bit_HEIGHT    (72)
#define Sun8bit_SIZE      (5702)
/*********************************
 * Bitmap Structure
 * Label: Sun8bit_RLE
 * Description:  72x72 pixels, 8-bits per pixel
 ***********************************/
extern const GFX_RESOURCE_HDR Sun8bit_RLE;
#define Sun8bit_RLE_WIDTH     (72)
#define Sun8bit_RLE_HEIGHT    (72)
#define Sun8bit_RLE_SIZE      (5702)
/*********************************
 * Bitmap Structure
 * Label: Gaming4bit
 * Description:  72x72 pixels, 4-bits per pixel
 ***********************************/
extern const GFX_RESOURCE_HDR Gaming4bit;
#define Gaming4bit_WIDTH     (72)
#define Gaming4bit_HEIGHT    (72)
#define Gaming4bit_SIZE      (2630)
/*********************************
 * Bitmap Structure
 * Label: Gaming4bit_RLE
 * Description:  72x72 pixels, 4-bits per pixel
 ***********************************/
extern const GFX_RESOURCE_HDR Gaming4bit_RLE;
#define Gaming4bit_RLE_WIDTH     (72)
#define Gaming4bit_RLE_HEIGHT    (72)
#define Gaming4bit_RLE_SIZE      (2630)
/*****************************************************************************
 * SECTION:  Fonts
 *****************************************************************************/

/*********************************
 * FNT Font File Structure
 * Label: Font25
 * Description:  Height: 27 pixels, range: ' ' to '~'
 ***********************************/
extern const GFX_RESOURCE_HDR Font25;
#define Font25_SIZE    (5005)
/*********************************
 * TTF Font File Structure
 * Label: Font33
 * Description:  Height: 33 pixels, 1 bit per pixel, Range: ' ' to '~'
 ***********************************/
extern const GFX_RESOURCE_HDR Font33;
#define Font33_SIZE    (6658)
/*********************************
 * TTF Font File Structure
 * Label: Font33_Antialiased
 * Description:  Height: 33 pixels, 2 bits per pixel, Range: 'A' to 'T'
 ***********************************/
extern const GFX_RESOURCE_HDR Font33_Antialiased;
#define Font33_Antialiased_SIZE    (1096)
/*****************************************************************************
 * SECTION:  Font33_Antialiased
 *****************************************************************************/

extern const GFX_XCHAR AntialisedText[];
#endif

